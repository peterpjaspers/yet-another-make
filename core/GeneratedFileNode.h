#pragma once
#include "FileNode.h"

namespace YAM
{
    class __declspec(dllexport) GeneratedFileNode : public FileNode
    {
    public:
        GeneratedFileNode() {} // needed for deserialization

        // Construct a generated file node for the file identified by given 
        // 'name' and generated by given 'producer' (e.g. a command node).
        GeneratedFileNode(
            ExecutionContext* context, 
            std::filesystem::path const& name, 
            Node* producer);

        virtual void setState(State newState) override;

        Node* producer() const;
        bool deleteFile();

        static void setStreamableType(uint32_t type);
        // Inherited from IStreamable
        uint32_t typeId() const override;

    private:
        Node* _producer;
    };
}
